// <auto-generated />
using System;
using System.Collections.Generic;
using LctKrasnodarWebApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace LctKrasnodarWebApi.Migrations
{
    [DbContext(typeof(ApiDbContext))]
    [Migration("20231110185401_modif")]
    partial class modif
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("LctKrasnodarWebApi.Models.AssignTagChanges", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("TagId")
                        .HasColumnType("integer");

                    b.Property<int>("TaskId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("AssignTagChanges");
                });

            modelBuilder.Entity("LctKrasnodarWebApi.Models.AssignTags", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("AssignTags");
                });

            modelBuilder.Entity("LctKrasnodarWebApi.Models.AssignedTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AddressFrom")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("AddressTo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDone")
                        .HasColumnType("boolean");

                    b.Property<List<double>>("LocationCoordinatesFrom")
                        .IsRequired()
                        .HasColumnType("double precision[]");

                    b.Property<List<double>>("LocationCoordinatesTo")
                        .IsRequired()
                        .HasColumnType("double precision[]");

                    b.Property<string>("Polyline")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Size")
                        .HasColumnType("integer");

                    b.Property<int>("Tag")
                        .HasColumnType("integer");

                    b.Property<int>("TaskId")
                        .HasColumnType("integer");

                    b.Property<int>("TravelTime")
                        .HasColumnType("integer");

                    b.Property<int>("WorkerId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("AssignedTasks");
                });

            modelBuilder.Entity("LctKrasnodarWebApi.Models.AvailableWorkerPosition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<List<double>>("LocationCoordinates")
                        .IsRequired()
                        .HasColumnType("double precision[]");

                    b.Property<int>("WorkerId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("AvailableWorkerPositions");
                });

            modelBuilder.Entity("LctKrasnodarWebApi.Models.ConstantTaskRule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int[]>("Conditions")
                        .IsRequired()
                        .HasColumnType("integer[]");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int[]>("Targets")
                        .IsRequired()
                        .HasColumnType("integer[]");

                    b.Property<List<string>>("Values")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.HasKey("Id");

                    b.ToTable("ConstantTaskRules");
                });

            modelBuilder.Entity("LctKrasnodarWebApi.Models.ConstantTaskSize", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int[]>("Grades")
                        .IsRequired()
                        .HasColumnType("integer[]");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Priority")
                        .HasColumnType("integer");

                    b.Property<int>("RuleQuantor")
                        .HasColumnType("integer");

                    b.Property<List<int>>("Rules")
                        .IsRequired()
                        .HasColumnType("integer[]");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ConstantTaskSizes");
                });

            modelBuilder.Entity("LctKrasnodarWebApi.Models.Office", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<List<double>>("LocationCoordinates")
                        .IsRequired()
                        .HasColumnType("double precision[]");

                    b.HasKey("Id");

                    b.ToTable("Offices");
                });

            modelBuilder.Entity("LctKrasnodarWebApi.Models.PartnerInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("AreCardsAndMaterialsDelivered")
                        .HasColumnType("integer");

                    b.Property<int?>("DaysSinceLastCardIssue")
                        .HasColumnType("integer");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<List<double>>("LocationCoordinates")
                        .IsRequired()
                        .HasColumnType("double precision[]");

                    b.Property<int?>("NumberOfApprovedApplications")
                        .HasColumnType("integer");

                    b.Property<int?>("NumberOfGivenCards")
                        .HasColumnType("integer");

                    b.Property<int?>("WhenPointConnected")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("PartnerInfos");
                });

            modelBuilder.Entity("LctKrasnodarWebApi.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("Grade")
                        .HasColumnType("integer");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Location")
                        .HasColumnType("text");

                    b.Property<List<double>>("LocationCoordinates")
                        .HasColumnType("double precision[]");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("LctKrasnodarWebApi.Models.WorkerCase", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Case")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("WorkerCases");
                });

            modelBuilder.Entity("LctKrasnodarWebApi.Models.WorkerPosition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<List<double>>("LocationCoordinates")
                        .IsRequired()
                        .HasColumnType("double precision[]");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("WorkerId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("WorkerPositions");
                });
#pragma warning restore 612, 618
        }
    }
}
